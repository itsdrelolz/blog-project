generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String   @db.Text
  thumbnail String?  @db.VarChar(255)  // URL to the thumbnail image
  author    User    @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  Int
  comments  Comment[]
  published Boolean  @default(true)
  @@index([authorId])
}

model User {
  id      Int      @id @default(autoincrement())
  name    String   @db.VarChar(100)
  email   String   @unique @db.VarChar(255)
  password String
  role    Role     @relation(fields: [roleId], references: [id])
  roleId  Int
  posts   Post[]
  comments Comment[]

  @@index([email])
  @@index([roleId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String   @db.Text

  author    User?    @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  Int?
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    Int

  @@index([authorId])
  @@index([postId])
}
model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique @db.VarChar(50)
  description String?  @db.VarChar(255)
  users       User[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}




